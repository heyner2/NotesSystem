// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotesSystem.Data;

namespace NotesSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210407154803_ini")]
    partial class ini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NotesSystem.Models.Grade", b =>
                {
                    b.Property<int>("idGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProfessoridProfessor")
                        .HasColumnType("int");

                    b.Property<string>("gradeText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGrade");

                    b.HasIndex("ProfessoridProfessor");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("NotesSystem.Models.Notes", b =>
                {
                    b.Property<int>("idNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idStudent")
                        .HasColumnType("int");

                    b.Property<double>("note")
                        .HasColumnType("float");

                    b.Property<int?>("studentidStudent")
                        .HasColumnType("int");

                    b.HasKey("idNote");

                    b.HasIndex("studentidStudent");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("NotesSystem.Models.Professor", b =>
                {
                    b.Property<int>("idProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProfessor");

                    b.ToTable("professor");
                });

            modelBuilder.Entity("NotesSystem.Models.Student", b =>
                {
                    b.Property<int>("idStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idgrade")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int?>("gradeidGrade")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idStudent");

                    b.HasIndex("gradeidGrade");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("NotesSystem.Models.Grade", b =>
                {
                    b.HasOne("NotesSystem.Models.Professor", null)
                        .WithMany("grades")
                        .HasForeignKey("ProfessoridProfessor");
                });

            modelBuilder.Entity("NotesSystem.Models.Notes", b =>
                {
                    b.HasOne("NotesSystem.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentidStudent");

                    b.Navigation("student");
                });

            modelBuilder.Entity("NotesSystem.Models.Student", b =>
                {
                    b.HasOne("NotesSystem.Models.Grade", "grade")
                        .WithMany()
                        .HasForeignKey("gradeidGrade");

                    b.Navigation("grade");
                });

            modelBuilder.Entity("NotesSystem.Models.Professor", b =>
                {
                    b.Navigation("grades");
                });
#pragma warning restore 612, 618
        }
    }
}
